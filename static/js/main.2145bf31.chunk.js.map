{"version":3,"sources":["commonStyles/CommonFormStyled.js","components/FormRegistration/styles/FormRegistrationStyled.js","commonStyles/CommonButtonStyled.js","components/ButtonSubmit/styles/ButtonSubmitStyled.js","components/ButtonSubmit/ButtonSubmit.js","components/MyOwnField/styles/MyOwnField.styled.js","components/MyOwnField/MyOwnField.js","schoolSubjects.js","utilities/teachersTypes.js","utilities/accountRoles.js","components/FormFields/RegistrationInputsForm/RegistrationInputsForm.js","validationSchema/registrationSchema.js","utilities/getRandomNumber.js","utilities/saveNewUserToDB.js","utilities/typesOfDB.js","classes/Persons.js","utilities/createIDofNewUser.js","utilities/getStudentWithSubjects.js","components/ButtonBackHome/ButtonBackHome.js","components/FormRegistration/FormRegistration.js","utilities/createUser.js","components/Admin.js","utilities/signIn.js","utilities/routeChange.js","components/FormLogin/styles/FormLoginStyled.js","components/FormFields/LoginInputsForm/LoginInputsForm.js","components/HeadingLoginForm/styles/HeadingLoginFormStyled.js","components/HeadingLoginForm/HeadingLoginForm.js","validationSchema/loginSchema.js","components/FormLogin/FormLogin.js","utilities/verifyDataToLogIn.js","utilities/getUserIfCorrectDataLogin.js","components/Homepage.js","components/UserPanel/styles/UserPanelStyled.js","components/UserPanel/UserPanel.js","utilities/logOut.js","commonStyles/TableGradesStyled.js","components/SubjectGradesSquare/SubjectGradesSquare.js","components/TableStudentOfAllGrades/TableStudentOfAllGrades.js","components/Student.js","utilities/schoolGrades.js","components/AddingGradesBox/styles/AddingGradesBoxStyled.js","components/AddingGradesBox/AddingGradesBox.js","utilities/useListeningStorageDB.js","utilities/addGrade.js","utilities/getJournalAfterCalculatedAverage.js","utilities/calculateNewGradeAverage.js","components/TableOfAllStudents/TableOfAllStudents.js","components/Teacher.js","components/MainRouter.js","App.js","reportWebVitals.js","index.js"],"names":["CommonFormStyled","styled","form","FormRegistrationStyled","CommonButtonStyled","button","ButtonSubmitStyled","ButtonSubmit","props","type","children","MyOwnFieldStyled","div","Error","Label","label","MyOwnField","useField","field","meta","htmlFor","id","name","as","touched","error","schoolSubjects","teachersTypes","map","subject","accountRoles","UCZEN","NAUCZYCIEL","RegistrationInputsForm","value","placeholder","required","surname","password","Object","values","item","uuidv4","role","element","registrationSchema","Yup","shape","min","matches","max","users","JSON","parse","localStorage","getItem","getRandomNumber","length","randomNumber","Math","floor","pow","random","generateNumber","Boolean","some","user","saveNewUserToDB","newUser","typeOfDB","push","setItem","stringify","typesOfDB","User","this","alert","Student","newStudent","student","allSubjects","reduce","prev","current","assign","oceny","srednia","subjects","getStudentWithSubjects","Teacher","ButtonBackHome","history","useHistory","onClick","goBack","FormRegistration","initialValues","onSubmit","console","log","createUser","validationSchema","onReset","handleReset","handleSubmit","Admin","useState","isCorrectAdminPassword","useEffect","signIn","sessionStorage","path","routeChange","FormLoginStyled","LoginInputsForm","userID","HeadingLoginFormStyled","legend","HeadingLoginForm","loginSchema","FormLogin","dataForm","find","getUserIfCorrectDataLogin","verifyDataToLogIn","isUserDataLoginCorrect","Homepage","UserPanelStyled","UserName","LogoutBtn","UserPanel","logOut","SubjectName","table","td","SubjectAverage","SubjectGrades","SubjectGradesSquareStyled","span","SubjectGradesSquare","ocena","data-grade","TableStudentOfAllGrades","studentJournal","entries","schoolGrades","AddingGradesBoxStyled","StudentNameSelect","select","AddGradeLegend","GradesSelect","AddGradeBtn","AddingGradesBox","setStudentJournal","window","addEventListener","useListeningStorageDB","event","preventDefault","subjectTaughtByTeacher","teacherType","split","dataFromAddingGradeForm","grade","document","getElementById","studentID","Number","selectedStudent","parseInt","newStudentJournal","sum","accumulator","toFixed","calculateNewGradeAverage","getJournalAfterCalculatedAverage","createEvent","initEvent","dispatchEvent","addGrade","target","selectedIndex","defaultValue","disabled","hidden","TableOfAllStudents","createHistory","basename","process","MainRouter","component","exact","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2145bf31.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CommonFormStyled = styled.form`\n  padding: 48px;\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n\n  legend {\n    font-size: 32px;\n    margin-bottom: 25px;\n  }\n  label {\n    font-weight: 800;\n  }\n  input,\n  select {\n    margin-bottom: 10px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { CommonFormStyled } from \"../../../commonStyles/CommonFormStyled\";\n\nexport const FormRegistrationStyled = styled(CommonFormStyled)`\n\n`","import styled from \"styled-components\";\n\nexport const CommonButtonStyled = styled.button`\n  background-color: #5469d4;\n  color: #fff;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  line-height: 28px;\n  padding: 8px 16px;\n  width: 100%;\n  min-height: 44px;\n  border-radius: 4px;\n  border: 3px transparent dashed;\n  outline-color: transparent;\n  &:hover {\n    background: #fff;\n    border-style: solid;\n    border-color: #5469d4;\n    color: rgb(84, 105, 212);\n    transition: all 0.3s ease;\n  }\n  &:focus-visible {\n    border-color: #e00;\n    color: rgb(84, 105, 212);\n    background-color: #fff;\n  }\n`;","import styled from \"styled-components\";\nimport { CommonButtonStyled } from '../../../commonStyles/CommonButtonStyled'\n\nexport const ButtonSubmitStyled = styled(CommonButtonStyled)`\n`;\n","import { ButtonSubmitStyled } from \"./styles/ButtonSubmitStyled.js\";\n\nexport const ButtonSubmit = (props) =>\n  <ButtonSubmitStyled type=\"submit\">{props.children}</ButtonSubmitStyled>\n\n","import styled from \"styled-components\";\n\nexport const MyOwnFieldStyled = styled.div`\n  padding-bottom: 24px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  input,\n  select {\n    font-size: 16px;\n    line-height: 28px;\n    padding: 8px 16px;\n    min-height: 44px;\n    border: unset;\n    border-radius: 4px;\n    box-sizing: content-box;\n    outline-color: rgb(84 105 212 / 0.5);\n    background-color: rgb(255, 255, 255);\n    box-shadow: rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n      rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n      rgba(60, 66, 87, 0.16) 0px 0px 0px 1px, rgba(0, 0, 0, 0) 0px 0px 0px 0px,\n      rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px;\n  }\n  input[data-light-mode=\"true\"]:focus-visible,\n  select[data-light-mode=\"true\"]:focus-visible {\n    outline: 2px #e00 dashed;\n    background-color: #fff;\n  }\n  input[data-light-mode=\"false\"]:focus-visible,\n  select[data-light-mode=\"false\"]:focus-visible {\n    outline: unset;\n    background-color: #fffc97;\n  }\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n`;\nexport const Error = styled.div`\n  font-size: 14px;\n  font-weight: 600;\n  display: block;\n  margin: 10px 0px;\n  color: #ff0000;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 600;\n  display: block;\n  margin-bottom: 10px;\n  color: #000;\n`;\n","import { useField, Field } from \"formik\";\nimport { MyOwnFieldStyled, Label, Error } from \"./styles/MyOwnField.styled\";\n\nexport const MyOwnField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <MyOwnFieldStyled>\n      <Label\n        htmlFor={props.id || props.name}>\n        {label}\n      </Label>\n      <Field\n        as={props.as}\n        {...field}\n        {...props}\n      />\n      {meta.touched && meta.error ? (\n        <Error>{meta.error}</Error>\n      ) : null}\n    </MyOwnFieldStyled>\n  );\n};\n","export const schoolSubjects = [\n    \"biologia\",\n    \"chemia\",\n    \"fizyka\",\n    \"geografia\",\n    \"historia\",\n    \"informatyka\",\n    \"j.angielski\",\n    \"j.polski\",\n    \"j.niemiecki\",\n    \"matematyka\",\n    \"religia\",\n    \"wos\"\n]","import { schoolSubjects } from \"../schoolSubjects\"\n\nexport const teachersTypes = schoolSubjects.map(subject => `Nauczyciel ${subject}`)","export const accountRoles = {\n    UCZEN: 'Uczeń',\n    NAUCZYCIEL: 'Nauczyciel'\n}","import { MyOwnField } from '../../MyOwnField/MyOwnField'\nimport { v4 as uuidv4 } from \"uuid\";\nimport { teachersTypes } from '../../../utilities/teachersTypes'\nimport { accountRoles } from '../../../utilities/accountRoles';\n\nexport const RegistrationInputsForm = (props) =>\n\n    <>\n        <MyOwnField\n            id=\"name\"\n            label=\"Wpisz imię:\"\n            name=\"name\"\n            type=\"text\"\n            as=\"input\"\n            value={props.name}\n            placeholder=\"Wpisz imię użytkownika\"\n            required\n        />\n        <MyOwnField\n            id=\"surname\"\n            label=\"Wpisz nazwisko:\"\n            name=\"surname\"\n            type=\"text\"\n            as=\"input\"\n            value={props.surname}\n            placeholder=\"Wpisz nazwisko użytkownika\"\n            required\n        />\n        <MyOwnField\n            id=\"password\"\n            label=\"Wpisz hasło:\"\n            name=\"password\"\n            type=\"password\"\n            as=\"input\"\n            value={props.password}\n            placeholder=\"Wpisz hasło użytkownika\"\n            required\n        />\n        <MyOwnField\n            id=\"role\"\n            as=\"select\"\n            name=\"role\"\n            label=\"Rola:\"\n            required>\n            <option value=\"\">Wybierz typ konta</option>\n            {\n                Object.values(accountRoles).map((item) =>\n                    <option key={uuidv4()} value={item}>\n                        {item}\n                    </option>\n                )\n            }\n\n        </MyOwnField>\n        {props.values.role === accountRoles.NAUCZYCIEL ? <MyOwnField\n            id=\"teacherType\"\n            as=\"select\"\n            name=\"teacherType\"\n            label=\"Typ nauczyciela\"\n            required>\n            <option value=\"\">Wybierz typ konta</option>\n            {teachersTypes.map(element => (\n                <option key={uuidv4()} value={element}>\n                    {element}\n                </option>\n            ))}\n        </MyOwnField> : false}\n    </>\n","import * as Yup from 'yup';\n\nexport const registrationSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(3, 'Imię powinno zawierać przynajmniej 3 znaki'),\n    surname: Yup.string()\n        .min(3, 'Nazwisko powinno zawierać przynajmniej 3 znaki'),\n    password: Yup.string()\n        .matches(/^[0-9]+$/, \"ID powinno składać się tylko z cyfr\")\n        .min(6, 'Hasło powinno zawierać 6 znaków')\n        .max(6, 'Hasło powinno zawierać 6 znaków'),\n});","const users = JSON.parse(localStorage.getItem('users'));\nconst verifyRepeatabilityID = id => {\n    const isUsersExist = Boolean(users);\n\n    if (isUsersExist === false) {\n        return false;\n    }\n\n    return users.some(user => user.id === id ? true : false)\n}\n\nconst generateNumber = length => Math.floor(Math.pow(10, length - 1) + Math.random() * 9 * Math.pow(10, length - 1));\n\nexport const getRandomNumber = length => {\n    const randomNumber = generateNumber(length)\n    const isRepeating = verifyRepeatabilityID(randomNumber)\n\n    return (isRepeating ? getRandomNumber(length) : randomNumber);\n}","export const saveNewUserToDB = (newUser, typeOfDB) => {\n    const users = localStorage.getItem(typeOfDB) ? JSON.parse(localStorage.getItem(typeOfDB)) : [];\n\n    users.push(newUser)\n\n    localStorage.setItem(typeOfDB, JSON.stringify(users))\n}\n","export const typesOfDB = {\n    users: 'users',\n    studentJournal: 'studentJournal'\n}","import { createIDofNewUser } from \"../utilities/createIDofNewUser\"\nimport { getStudentWithSubjects } from \"../utilities/getStudentWithSubjects\"\nimport { saveNewUserToDB } from \"../utilities/saveNewUserToDB\"\nimport { typesOfDB } from \"../utilities/typesOfDB\"\n\nexport class User {\n    constructor(values) {\n\n        this.newUser = createIDofNewUser(values)\n        saveNewUserToDB(this.newUser, typesOfDB.users)\n        return this.newUser\n    }\n}\nexport class Student {\n    constructor(values) {\n        this.newUser = new User(values)\n\n        this.newStudent = getStudentWithSubjects(this.newUser)\n\n\n        saveNewUserToDB(this.newStudent, typesOfDB.studentJournal)\n    }\n}\nexport class Teacher extends User {\n    constructor(values) {\n        new User(values)\n    }\n}","import { getRandomNumber } from './getRandomNumber'\n\nexport const createIDofNewUser = (newUser) => {\n    const numberOfDigitsInID = 6;\n\n    newUser.id = getRandomNumber(numberOfDigitsInID)\n\n    alert(`Pilnie zapisz na kartce to ID, bedzie Ci potrzebne do logowania ${newUser.id}`)\n\n    return newUser;\n}\n\n","import { schoolSubjects } from '../schoolSubjects'\n\nexport const getStudentWithSubjects = (student) => {\n\n    const allSubjects = schoolSubjects.reduce((prev, current) => {\n        return Object.assign(prev, { [current]: { oceny: [], srednia: null } })\n    }, {})\n\n    const newStudent = {\n        ...student,\n        subjects: { ...allSubjects }\n    }\n\n    return newStudent;\n}","import { useHistory } from \"react-router-dom\";\n\nexport const ButtonBackHome = () => {\n    let history = useHistory();\n\n    const backHome = () => history.goBack()\n\n    return (\n        <button onClick={backHome}>\n            Powróć do strony głównej\n        </button>\n    )\n}","import { FormRegistrationStyled } from './styles/FormRegistrationStyled'\nimport { Formik } from 'formik'\nimport { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit'\nimport { RegistrationInputsForm } from '../FormFields/RegistrationInputsForm/RegistrationInputsForm'\nimport { registrationSchema } from '../../validationSchema/registrationSchema'\nimport { createUser } from '../../utilities/createUser'\nimport { ButtonBackHome } from '../ButtonBackHome/ButtonBackHome'\n\nexport const FormRegistration = () =>\n    <Formik\n        initialValues={{}}\n        onSubmit={values => {\n            console.log('values', values)\n            createUser(values)\n        }}\n        validationSchema={registrationSchema}\n    >\n        {(props) =>\n            <>\n                <ButtonBackHome />\n                <FormRegistrationStyled\n                    onReset={props.handleReset}\n                    onSubmit={props.handleSubmit}>\n                    <legend>Rejestracja nowego użytkownika</legend>\n                    <RegistrationInputsForm values={props.values} />\n                    <ButtonSubmit>Zarejestruj konto</ButtonSubmit>\n                </FormRegistrationStyled>\n            </>\n        }\n    </Formik>","import { Student, Teacher } from '../classes/Persons'\nimport { accountRoles } from './accountRoles';\n\nexport const createUser = (values) => {\n    switch (values.role) {\n        case accountRoles.UCZEN:\n            new Student(values);\n            break;\n        case accountRoles.NAUCZYCIEL:\n            new Teacher(values);\n            break;\n        default: break;\n    }\n}","import { useEffect, useState } from 'react';\nimport { FormRegistration } from './FormRegistration/FormRegistration';\nimport { showPrompt } from '../utilities/showPrompt';\n\nexport const Admin = () => {\n    const [isCorrectAdminPassword, setIsCorrectAdminPassword] = useState(true);\n\n    useEffect(() => {\n        // showPrompt(setIsCorrectAdminPassword)\n    }, [])\n\n    return (\n        <>\n            {isCorrectAdminPassword ?\n                <>\n                    <FormRegistration />\n                </>\n                : null}\n        </>\n    );\n};\n","import { routeChange } from './routeChange';\n\nexport const signIn = (user, history) => {\n    sessionStorage.setItem('login', JSON.stringify(user));\n    routeChange(user, history);\n}","import { accountRoles } from \"./accountRoles\";\n\nexport const routeChange = (user, history) => {\n    let path;\n\n    switch (user.role) {\n        case accountRoles.UCZEN:\n            path = '/uczen'\n            break;\n        case accountRoles.NAUCZYCIEL:\n            path = '/nauczyciel'\n            break;\n        default:\n            break;\n    }\n\n    history.push(path);\n}","import styled from \"styled-components\";\nimport { CommonFormStyled } from \"../../../commonStyles/CommonFormStyled\";\n\nexport const FormLoginStyled = styled(CommonFormStyled)`\n\n`\n","import { MyOwnField } from '../../MyOwnField/MyOwnField'\nexport const LoginInputsForm = (props) =>\n  <>\n    <MyOwnField\n      id=\"userID\"\n      label=\"Wpisz ID:\"\n      name=\"userID\"\n      type=\"number\"\n      as=\"input\"\n      min='0'\n      value={props.userID}\n      placeholder=\"Wpisz ID użytkownika\"\n      required\n    />\n    <MyOwnField\n      id=\"password\"\n      label=\"Wpisz hasło:\"\n      name=\"password\"\n      type=\"password\"\n      as=\"input\"\n      value={props.password}\n      placeholder=\"Wpisz hasło użytkownika\"\n      required\n    />\n  </>\n","import styled from \"styled-components\"\n\nexport const HeadingLoginFormStyled = styled.legend`\nfont-size: 32px;\n   margin: 0; \n   padding: 20px 0;\n`\n","import { HeadingLoginFormStyled } from \"./styles/HeadingLoginFormStyled\"\n\nexport const HeadingLoginForm = () => <HeadingLoginFormStyled>Panel logowania</HeadingLoginFormStyled>\n\n","import * as Yup from 'yup';\n\nexport const loginSchema = Yup.object().shape({\n    userID: Yup.string()\n        .matches(/^[0-9]+$/, \"ID powinno składać się tylko z cyfr\")\n        .min(6, 'ID powinno zawierać 6 znaków')\n        .max(6, 'ID powinno zawierać 6 znaków'),\n    password: Yup.string()\n        .min(6, 'Hasło powinno zawierać minimum 6 znaków')\n});","import { signIn } from '../../utilities/signIn';\nimport { useHistory } from 'react-router-dom'\nimport { Formik } from \"formik\";\nimport { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit'\nimport { FormLoginStyled } from './styles/FormLoginStyled';\nimport { LoginInputsForm } from '../FormFields/LoginInputsForm/LoginInputsForm';\nimport { HeadingLoginForm } from '../HeadingLoginForm/HeadingLoginForm';\nimport { verifyDataToLogIn } from '../../utilities/verifyDataToLogIn';\nimport { loginSchema } from '../../validationSchema/loginSchema';\n\n\nexport const FormLogin = () => {\n    const history = useHistory();\n\n    return (\n        <Formik\n            initialValues={{}}\n            onSubmit={values => {\n                const user = verifyDataToLogIn(values);\n                const isUserDataLoginCorrect = user ? true : false;\n\n                console.log(values)\n                return isUserDataLoginCorrect ? signIn(user, history) : false;\n            }}\n            validationSchema={loginSchema}\n        >\n            {(props) => (\n                <FormLoginStyled\n                    onReset={props.handleReset}\n                    onSubmit={props.handleSubmit}>\n                    <HeadingLoginForm />\n                    <LoginInputsForm values={props.values} />\n                    <ButtonSubmit>Zaloguj się</ButtonSubmit>\n                </FormLoginStyled>\n            )}\n        </Formik>\n    );\n}\n\n\n","import { typesOfDB } from './typesOfDB'\nimport { getUserIfCorrectDataLogin } from './getUserIfCorrectDataLogin';\n\nexport const verifyDataToLogIn = (dataForm) => {\n    const users = JSON.parse(localStorage.getItem(typesOfDB.users));\n    const isUsersExist = users === null;\n\n    if (!isUsersExist === false) {\n        return false;\n    }\n\n    return getUserIfCorrectDataLogin(users, dataForm)\n}\n\n","export const getUserIfCorrectDataLogin = (users, dataForm) => users.find(user => user.id === dataForm.userID && user.password === dataForm.password)","import { FormLogin } from './FormLogin/FormLogin';\n\nexport const Homepage = (props) => {\n  return (\n    <FormLogin />\n  )\n}","import styled from \"styled-components\";\n\n\nexport const UserPanelStyled = styled.div`\n  font-size: 1.5rem;\n`\n\nexport const UserName = styled.div`\n color: green;\n    font-weight: 700;\n`\n\nexport const LogoutBtn = styled.button`\n    font-size: 1.3rem;\n    cursor: pointer;\n    display: block;\n    color: red;\n    padding: 5px;\n    margin: 1rem 0 2rem;\n    font-weight: 700;\n    border: 2px solid #000;\n`\n","import { logOut } from \"../../utilities/logOut\"\nimport { useHistory } from \"react-router\";\nimport { UserPanelStyled, UserName, LogoutBtn } from \"./styles/UserPanelStyled\";\n\nexport const UserPanel = () => {\n    const history = useHistory();\n    const user = JSON.parse(sessionStorage.getItem('login'))\n\n    return (\n        <UserPanelStyled>\n            Cześć <UserName>{user.name} {user.surname}</UserName>\n            <LogoutBtn onClick={() => logOut(history)}>Wyloguj</LogoutBtn>\n        </UserPanelStyled>\n    )\n}","export const logOut = (history) => {\n    history.goBack()\n    sessionStorage.setItem('login', null)\n}","import styled from \"styled-components\"\n\nexport const TableGradesStyled = styled.table`\n\n`\nexport const SubjectName = styled.td`\n    padding: 0.6rem 1rem;\n  text-align: center;\n`\nexport const SubjectAverage = styled.td`\n border-right: none;\n`\nexport const SubjectGrades = styled.td`\n  min-width: 400px;\n`\nexport const SubjectGradesSquareStyled = styled.span`\n    display: inline-flex;\n    margin: 5px;\n    width: 25px;\n    height: 25px;\n    align-items: center;\n    justify-content: center;\n    &[data-grade=\"1\"] {\n      background-color: #ff0000;\n    }\n    &[data-grade=\"2\"] {\n      background-color: #ffa500;\n    }\n    &[data-grade=\"3\"] {\n      background-color: #ffff00;\n    }\n    &[data-grade=\"4\"] {\n      background-color: #adff2f;\n    }\n    &[data-grade=\"5\"],\n    &[data-grade=\"6\"] {\n      background-color: #008000;\n    }\n`","import React from 'react';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { SubjectGradesSquareStyled } from '../../commonStyles/TableGradesStyled';\n\nexport const SubjectGradesSquare = props =>\n    <>\n        {props.subject.oceny.map(ocena => (<SubjectGradesSquareStyled data-grade={ocena} key={uuidv4()}>{ocena}</SubjectGradesSquareStyled>))}\n    </>","import { v4 as uuidv4 } from \"uuid\";\nimport { SubjectGradesSquare } from \"../SubjectGradesSquare/SubjectGradesSquare\";\nimport { typesOfDB } from \"../../utilities/typesOfDB\";\nimport { SubjectAverage, SubjectGrades, SubjectName } from \"../../commonStyles/TableGradesStyled\";\n\nexport const TableStudentOfAllGrades = (props) => {\n    const user = JSON.parse(sessionStorage.getItem('login'))\n    const studentJournal = JSON.parse(localStorage.getItem(typesOfDB.studentJournal)).find(item => item.id === user.id);\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Przedmiot</th>\n                    <th>Oceny</th>\n                    <th>Średnia</th>\n                </tr>\n            </thead>\n            <tbody>\n                {Object.entries(studentJournal.subjects).map(subject =>\n                (\n                    <tr key={uuidv4()}>\n                        <SubjectName>{subject[0]}</SubjectName>\n                        <SubjectGrades>\n                            <SubjectGradesSquare subject={subject[1]} />\n                        </SubjectGrades>\n                        <SubjectAverage> {subject[1].srednia} </SubjectAverage>\n                    </tr>\n                )\n                )}\n            </tbody>\n        </table>\n    )\n}","import React from 'react';\nimport { UserPanel } from './UserPanel/UserPanel';\nimport { TableStudentOfAllGrades } from './TableStudentOfAllGrades/TableStudentOfAllGrades';\n\nexport const Student = () =>\n    <>\n        <UserPanel />\n        <TableStudentOfAllGrades />\n    </>","export const schoolGrades = [1, 2, 3, 4, 5, 6]","import styled from \"styled-components\";\n\nexport const AddingGradesBoxStyled = styled.form`\n margin: 3rem 0;\n  display: flex;\n  flex-direction: column;\n  width: max-content;\n`\n\nexport const StudentNameSelect = styled.select`\n margin-bottom: 0.3rem;\n    padding: 0.2rem;\n    font-size: 1rem;\n`\nexport const AddGradeLegend = styled.legend`\n font-size: 1.5rem;\n    margin-bottom: 0.7rem;\n`\n\nexport const GradesSelect = styled.select`\n margin-bottom: 0.3rem;\n    padding: 0.2rem;\n    font-size: 1rem;\n`\n\nexport const AddGradeBtn = styled.button`\n font-size: 1rem;\n color: rgb(2, 128, 2);\n    font-weight: 700;\n    padding: 0.6rem 0;\n    cursor: pointer;\n`","import { useState } from \"react\";\nimport { schoolGrades } from \"../../utilities/schoolGrades\"\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addGrade } from \"../../utilities/addGrade\";\nimport { typesOfDB } from \"../../utilities/typesOfDB\";\nimport { useListeningStorageDB } from \"../../utilities/useListeningStorageDB\";\nimport { AddingGradesBoxStyled, AddGradeLegend, StudentNameSelect, GradesSelect, AddGradeBtn } from \"./styles/AddingGradesBoxStyled\";\n\nexport const AddingGradesBox = () => {\n    const [studentJournal, setStudentJournal] = useState(JSON.parse(localStorage.getItem(typesOfDB.studentJournal)));\n\n    useListeningStorageDB(setStudentJournal)\n\n    return (\n        <AddingGradesBoxStyled onSubmit={(event) => { addGrade(event, studentJournal); event.target[0].selectedIndex = 0 }}>\n            <AddGradeLegend>Dodawanie ocen</AddGradeLegend>\n            <StudentNameSelect id=\"adding-box__student-name\" defaultValue={'Wybierz ucznia'} required>\n                <option value='' disabled hidden>Wybierz ucznia</option>\n                {studentJournal.map(student => <option key={uuidv4()} value={`${student.id}`}>{`${student.name} ${student.surname}`} {`(${student.id})`}</option>)}\n            </StudentNameSelect>\n            <GradesSelect id=\"adding-box__grades\">\n                {schoolGrades.map(grade => <option key={uuidv4()} value={grade}>{grade}</option>)}\n            </GradesSelect>\n            <AddGradeBtn>Dodaj ocenę</AddGradeBtn>\n        </AddingGradesBoxStyled>\n    )\n}","import { useEffect } from \"react\";\nimport { typesOfDB } from \"./typesOfDB\";\n\nexport const useListeningStorageDB = (setStudentJournal) => {\n    useEffect(() => {\n        window.addEventListener('storage', () => {\n            setStudentJournal(JSON.parse(localStorage.getItem(typesOfDB.studentJournal)) || [])\n        });\n    }, [])\n}","import { typesOfDB } from \"./typesOfDB\"\nimport { getJournalAfterCalculatedAverage } from \"./getJournalAfterCalculatedAverage\"\n\nexport const addGrade = (event, studentJournal) => {\n    event.preventDefault()\n    const user = JSON.parse(sessionStorage.getItem('login'))\n    const subjectTaughtByTeacher = user.teacherType.split(' ')[1];\n\n    const dataFromAddingGradeForm = {\n        grade: document.getElementById('adding-box__grades').value,\n        studentID: Number(document.getElementById('adding-box__student-name').value)\n    }\n\n    const selectedStudent = studentJournal.find(student => student.id === dataFromAddingGradeForm.studentID)\n    selectedStudent.subjects[subjectTaughtByTeacher].oceny.push(parseInt(dataFromAddingGradeForm.grade))\n    const newStudentJournal = getJournalAfterCalculatedAverage(studentJournal, selectedStudent, subjectTaughtByTeacher, dataFromAddingGradeForm)\n\n    localStorage.setItem(typesOfDB.studentJournal, JSON.stringify(newStudentJournal));\n\n    var event = document.createEvent(\"Event\");\n    event.initEvent(\"storage\", true, true);\n    window.dispatchEvent(event);\n}","import { calculateNewGradeAverage } from \"./calculateNewGradeAverage\"\n\nexport const getJournalAfterCalculatedAverage = (studentJournal, selectedStudent, subject, dataFromAddingGradeForm) => {\n    return studentJournal.map(student => {\n        if (student.id === dataFromAddingGradeForm.studentID) {\n            const sum = selectedStudent.subjects[subject].oceny.reduce((accumulator, current) => {\n                return accumulator + current\n            })\n            selectedStudent.subjects[subject].srednia = calculateNewGradeAverage(sum, selectedStudent, subject)\n            student = selectedStudent\n        }\n        return student;\n    })\n}","export const calculateNewGradeAverage = (sum, selectedStudent, subject) => (sum / selectedStudent.subjects[subject].oceny.length).toFixed(1)\n","import { v4 as uuidv4 } from \"uuid\";\nimport { SubjectGradesSquare } from \"../SubjectGradesSquare/SubjectGradesSquare\";\nimport { useEffect, useState } from \"react\";\nimport { typesOfDB } from \"../../utilities/typesOfDB\";\nimport { SubjectAverage, SubjectGrades, SubjectName } from \"../../commonStyles/TableGradesStyled\";\n\nexport const TableOfAllStudents = (props) => {\n    const user = JSON.parse(sessionStorage.getItem('login'))\n    const subjectTaughtByTeacher = user.teacherType.split(' ')[1];\n    const [studentJournal, setStudentJournal] = useState(JSON.parse(localStorage.getItem(typesOfDB.studentJournal)));\n\n\n    useEffect(() => {\n        window.addEventListener('storage', () => {\n            setStudentJournal(JSON.parse(localStorage.getItem(typesOfDB.studentJournal)) || [])\n        });\n    }, [])\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Uczeń</th>\n                    <th>Oceny</th>\n                    <th>Średnia</th>\n                </tr>\n            </thead>\n            <tbody>\n                {studentJournal.map((student) =>\n                    <tr key={uuidv4()}>\n                        <SubjectName>{`${student.name} ${student.surname}`}</SubjectName>\n                        <SubjectGrades>\n                            <SubjectGradesSquare subject={student.subjects[subjectTaughtByTeacher]} />\n                        </SubjectGrades>\n                        <SubjectAverage>{student.subjects[subjectTaughtByTeacher].srednia}</SubjectAverage>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    )\n}","import { AddingGradesBox } from './AddingGradesBox/AddingGradesBox';\nimport { TableOfAllStudents } from './TableOfAllStudents/TableOfAllStudents';\nimport { UserPanel } from './UserPanel/UserPanel';\n\nexport const Teacher = () =>\n    <>\n        <UserPanel />\n        <TableOfAllStudents />\n        <AddingGradesBox />\n    </>\n","import {\n    HashRouter as Router,\n    Redirect,\n    Route\n} from \"react-router-dom\";\nimport { Admin } from './Admin'\nimport { Homepage } from './Homepage'\nimport { Student } from './Student'\nimport { Teacher } from './Teacher'\nimport { createBrowserHistory as createHistory } from 'history';\n\nconst history = createHistory({\n    basename: process.env.PUBLIC_URL,\n});\n\nexport const MainRouter = () => {\n    return (\n        <Router history={history} basename={process.env.PUBLIC_URL}>\n            <Route path=\"/admin\" component={Admin} />\n            <Route path=\"/uczen\" component={Student} />\n            <Route path=\"/nauczyciel\" component={Teacher} />\n            <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path='/home' component={Homepage} />\n        </Router>\n    );\n};\n","import './styles/main.scss'\nimport { MainRouter } from './components/MainRouter'\n\nfunction App() {\n  return (\n    <>\n      <MainRouter />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}